// ------------------------------------------------------------
// Bolt-Action Anti-Materiel Rifle
// ------------------------------------------------------------

class BogRifle:BossRifle{
	default{
		inventory.pickupMessage "$PICKUP_OMGBOSS";
		Obituary "$OB_OMGBOSS";
		hdweapon.barrelsize 40,1,2; // Shouldn't this be bigger than 7mm? [UZ]
		hdweapon.refid HDLD_OMGBOSS;
		tag "$TAG_OMGBOSS";
		inventory.maxamount 3; //1 use user setting; 2 custom chamber; 3 regular

		hdweapon.ammo1 "HDOmgClip",1;
	}
	override double gunmass(){
		return 30;
	}
	override double weaponbulk(){
		return 144+weaponstatus[BOSSS_MAG]*ENC_50OMG_LOADED;
	}
	override string,double getpickupsprite(){return "BOGGZ0",1.;}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HDOmgClip")));
			if(nextmagloaded<1){
				sb.drawimage("OCLPF0",(-50,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.,scale:(1.25,1.6));
			}else if(nextmagloaded<2){
				sb.drawimage("OCLPE0",(-50,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(1.25,1.6));
			}else if(nextmagloaded<3){
				sb.drawimage("OCLPD0",(-50,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(1.25,1.6));
			}else if(nextmagloaded<4){
				sb.drawimage("OCLPC0",(-50,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(1.25,1.6));
			}else if(nextmagloaded<5){
				sb.drawimage("OCLPB0",(-50,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(1.25,1.6));
			}else sb.drawimage("OCLPA0",(-50,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(1.25,1.6));
			sb.drawnum(hpl.countinv("HDOmgClip"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);

			int omgrounds=hpl.countinv("HD50OMGAmmo");
			sb.drawimage("OG10A0",(-62,-4),sb.DI_SCREEN_CENTER_BOTTOM,alpha:omgrounds?1:0.6,scale:(1.2,1.2));
			sb.drawnum(omgrounds,-56,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		sb.drawwepnum(hdw.weaponstatus[BOSSS_MAG],5);
		sb.drawwepcounter(hdw.weaponstatus[BOSSS_CHAMBER],
			-16,-10,"blank","STRNDFRD","STRNDCMB","STRNDJAM"
		);
		sb.drawstring(
			sb.mAmountFont,string.format("%.1f",hdw.weaponstatus[BOSSS_ZOOM]*0.1),
			(-36,-18),sb.DI_SCREEN_CENTER_BOTTOM|sb.DI_TEXT_ALIGN_RIGHT,Font.CR_DARKGRAY
		);
		sb.drawstring(
			sb.mAmountFont,string.format("%.1f",hdw.weaponstatus[BOSSS_DROPADJUST]*0.1),
			(-16,-18),sb.DI_SCREEN_CENTER_BOTTOM|sb.DI_TEXT_ALIGN_RIGHT,Font.CR_WHITE
		);
	}
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_ALTFIRE..StringTable.Localize("$BOSWH_ALTFIRE")
		..WEPHELP_RELOAD..StringTable.Localize("$BOSWH_RELOAD")
		..WEPHELP_ZOOM.."+"..WEPHELP_FIREMODE..StringTable.Localize("$BOSWH_ZPFMOD")
		..WEPHELP_ZOOM.."+"..WEPHELP_USE..StringTable.Localize("$BOSWH_ZPUSE")
		// ..WEPHELP_ZOOM.."+"..WEPHELP_DROPONE..StringTable.Localize("$BOSWH_ZPDRON")
		// ..WEPHELP_ZOOM.."+"..WEPHELP_ALTRELOAD..StringTable.Localize("$BOSWH_ZPALTRELOAD")
		..WEPHELP_ALTFIRE.."+"..WEPHELP_UNLOAD..StringTable.Localize("$BOSWH_AFIREPUNL")
		..WEPHELP_UNLOADUNLOAD
		;
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HD50OMGAmmo"))owner.A_DropInventory("HD50OMGAmmo",10);
			else owner.A_DropInventory("HDOmgClip",1);
		}
	}
	override void ForceBasicAmmo(){
		owner.A_SetInventory("HD50OMGAmmo",11);
		ForceOneBasicAmmo("HDOmgClip");
	}


	states{
	select0:
		BOGG A 0;
		goto select0bfg;
	deselect0:
		BOGG A 0;
		goto deselect0big;

	ready:
		BOGG A 1{
			if(pressingzoom()){
				if(player.cmd.buttons&BT_USE){
					A_ZoomAdjust(BOSSS_DROPADJUST,0,600,BT_USE);
				}else if(invoker.weaponstatus[0]&BOSSF_FRONTRETICLE)A_ZoomAdjust(BOSSS_ZOOM,12,40);
				else A_ZoomAdjust(BOSSS_ZOOM,5,60);
				A_WeaponReady(WRF_NONE);
			}else A_WeaponReady(WRF_ALL);
		}goto readyend;
	user3:
		---- A 0 A_MagManager("HDOmgClip");
		goto ready;
	fire:
		BOGG A 1 A_JumpIf(invoker.weaponstatus[BOSSS_CHAMBER]==2,"shoot");
		goto ready;
	shoot:
		BOGG A 1{
			A_Gunflash();
			invoker.weaponstatus[BOSSS_CHAMBER]=1;
			A_StartSound("weapons/bogomgfire",CHAN_WEAPON,CHANF_OVERLAP,
				pitch:!(invoker.weaponstatus[0]&BOSSF_CUSTOMCHAMBER)?1.1:1.
			);
			A_AlertMonsters();

			HDBulletActor.FireBullet(self,"HDB_50OMG",
				aimoffy:(-HDCONST_GRAVITY/600.)*invoker.weaponstatus[BOSSS_DROPADJUST],
				speedfactor:(invoker.weaponstatus[0]&BOSSF_CUSTOMCHAMBER)?0.99:1.07
			);
			A_MuzzleClimb(
				0,0,
				-frandom(0.4,0.8),-frandom(2.4,4.),
				-frandom(0.8,1.4),-frandom(4.8,8.4),
				-frandom(0.8,1.4),-frandom(4.8,8.4)
			);
		}
		BOGG F 1;
		BOGG F 1 A_JumpIf(gunbraced(),"ready");
		goto ready;
	flash:
		BARF A 1 bright{
			A_Light1();
			HDFlashAlpha(-96);
			A_ZoomRecoil(0.86);
			A_ChamberGrit(randompick(0,0,0,0,0,1,1,1,1,-1));
		}
		TNT1 A 0 A_Light0();
		stop;
	altfire:
		BOGG A 1 A_WeaponBusy();
		BOGG B 1 A_JumpIf(invoker.weaponstatus[0]&BOSSF_CUSTOMCHAMBER,1);
		BOGG B 2 A_JumpIf(invoker.weaponstatus[BOSSS_CHAMBER]>2,"jamderp");
		BOGG B 2 A_MuzzleClimb(-frandom(0.06,0.1),-frandom(0.3,0.5));
		BOGG B 0 A_ChamberGrit(randompick(0,0,0,0,-1,1,2),true);
		BOGG B 0 A_Refire("chamber");
		goto ready;
	althold:
		BOGG E 1 A_WeaponReady(WRF_NOFIRE);
		BOGG E 1{
			A_ClearRefire();
			bool chempty=invoker.weaponstatus[BOSSS_CHAMBER]<1;
			if(pressingunload()){
				if(chempty){
					return resolvestate("altholdclean");
				}else{
					invoker.weaponstatus[0]|=BOSSF_UNLOADONLY;
					return resolvestate("loadchamber");
				}
			}else if(pressingreload()){
				if(
					!chempty
				){
					invoker.weaponstatus[0]|=BOSSF_UNLOADONLY;
					return resolvestate("loadchamber");
				}else if(
					invoker.weaponstatus[BOSSS_GRIME]>10
				){
					return resolvestate("altholdclean");
				}else if(
					countinv("HD50OMGAmmo")
				){
					invoker.weaponstatus[0]&=~BOSSF_UNLOADONLY;
					return resolvestate("loadchamber");
				}
			}
			if(pressingaltfire())return resolvestate("althold");
			return resolvestate("altholdend");
		}
	altholdend:
		BOGG E 0 A_StartSound("weapons/boltfwd",8);
		BOGG DC 4 A_WeaponReady(WRF_NOFIRE);
		BOGG B 4{
			A_WeaponReady(WRF_NOFIRE);
			if(invoker.weaponstatus[0]&BOSSF_CUSTOMCHAMBER)A_SetTics(3);
		}
		goto ready;
	loadchamber:
		BOGG E 1 offset(2,36) A_ClearRefire();
		BOGG E 1 offset(3,38);
		BOGG E 1 offset(5,42);
		BOGG E 1 offset(8,48) A_StartSound("weapons/pocket",9);
		BOGG E 1 offset(9,52) A_MuzzleClimb(frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2);
		BOGG E 2 offset(8,60);
		BOGG E 2 offset(7,72);
		TNT1 A 18 A_StartSound("weapons/pocket",9);
		TNT1 A 4{
			A_StartSound("weapons/bossload",8,volume:0.7);
			if(invoker.weaponstatus[0]&BOSSF_UNLOADONLY){
				int chm=invoker.weaponstatus[BOSSS_CHAMBER];
				invoker.weaponstatus[BOSSS_CHAMBER]=0;
				if(chm<2||A_JumpIfInventory("HD50OMGAmmo",0,"null")){
					class<actor> whatkind=chm==2?"HDLoose50OMG":"HDSpent50OMG";
					actor rrr=spawn(whatkind,pos+(cos(angle)*10,sin(angle)*10,height-12),ALLOW_REPLACE);
					rrr.angle=angle;rrr.A_ChangeVelocity(1,2,1,CVF_RELATIVE);
				}else HDF.Give(self,"HD50OMGAmmo",1);
				A_ChamberGrit(randompick(0,0,0,0,-1,1),true);
			}else{
				A_TakeInventory("HD50OMGAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[BOSSS_CHAMBER]=2;
			}
		} 
		BOGG E 2 offset(7,72);
		BOGG E 2 offset(8,60);
		BOGG E 1 offset(6,52);
		BOGG E 1 offset(5,42);
		BOGG E 1 offset(4,38);
		BOGG E 1 offset(3,35);
		goto althold;
	altholdclean:
		BOGG E 1 offset(2,36) A_ClearRefire();
		BOGG E 1 offset(3,38);
		BOGG E 1 offset(5,41) A_Log(StringTable.Localize("$BOSS_CLEANS"),true);
		BOGG E 1 offset(8,44) A_StartSound("weapons/pocket",9);
		BOGG E 1 offset(7,50) A_MuzzleClimb(frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2);
		TNT1 A 3 A_StartSound("weapons/pocket",10);
		TNT1 AAAA 4 A_MuzzleClimb(frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2));
		TNT1 A 3 A_StartSound("weapons/pocket",9);
		TNT1 AAAA 4 A_MuzzleClimb(frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2),frandom(-0.2,0.2));
		TNT1 A 40{
			A_StartSound("weapons/pocket",9);
			int amt=invoker.weaponstatus[BOSSS_GRIME];
			string amts=StringTable.Localize("$BOSS_CLEAN1");
			if(amt>40)amts=StringTable.Localize("$BOSS_CLEAN2");
			else if(amt>30)amts=StringTable.Localize("$BOSS_CLEAN3");
			else if(amt>20)amts=StringTable.Localize("$BOSS_CLEAN4");
			else if(amt>10)amts=StringTable.Localize("$BOSS_CLEAN5");

			/*static const */string cleanverbs[]={StringTable.Localize("$BOSS_EXTRACT"),StringTable.Localize("$BOSS_SCRAPEOFF"),StringTable.Localize("$BOSS_WIPEAWAY"),StringTable.Localize("$BOSS_CAREREMOVE"),StringTable.Localize("$BOSS_DUMPOUT"),StringTable.Localize("$BOSS_PICKOUT"),StringTable.Localize("$BOSS_BLOWOFF"),StringTable.Localize("$BOSS_SHAKEOUT"),StringTable.Localize("$BOSS_SCRUBOFF"),StringTable.Localize("$BOSS_FISH")};
			/*static const */string contaminants[]={StringTable.Localize("$BOSS_SOMEDUST"),StringTable.Localize("$BOSS_ALODUST"),StringTable.Localize("$BOSS_ABOPOWDER"),StringTable.Localize("$BOSS_DAOPOWDER"),StringTable.Localize("$BOSS_SEXGREASE"),StringTable.Localize("$BOSS_ALOSOOT"),StringTable.Localize("$BOSS_SOMEIRON"),StringTable.Localize("$BOSS_HAIR"),StringTable.Localize("$BOSS_EYELASH"),StringTable.Localize("$BOSS_BLOOD"),StringTable.Localize("$BOSS_RUST"),StringTable.Localize("$BOSS_CRUMB"),StringTable.Localize("$BOSS_DEADSOME"),StringTable.Localize("$BOSS_ASHES"),StringTable.Localize("$BOSS_SKIN"),StringTable.Localize("$BOSS_FLUID"),StringTable.Localize("$BOSS_WOWSOME"),StringTable.Localize("$BOSS_BOOGER"),StringTable.Localize("$BOSS_FECAL"),StringTable.Localize("$BOSS_BULLETSIMPACT"),StringTable.Localize("$BOSS_JAM"),StringTable.Localize("$BOSS_HUSK"),StringTable.Localize("$BOSS_SFLESH"),StringTable.Localize("$BOSS_CRYSTAL"),StringTable.Localize("$BOSS_SPACEANT"),StringTable.Localize("$BOSS_TRANSISTOR"),StringTable.Localize("$BOSS_TINBOSS"),StringTable.Localize("$BOSS_FILM")};
			/*static const */string actionparts[]={StringTable.Localize("$BOSS_BOLTCAR"),StringTable.Localize("$BOSS_MAINEXTRACTOR"),StringTable.Localize("$BOSS_AUXEXTRACTOR"),StringTable.Localize("$BOSS_CAMPIN"),StringTable.Localize("$BOSS_BOLTHEAD"),StringTable.Localize("$BOSS_STRIKER"),StringTable.Localize("$BOSS_SPRING"),StringTable.Localize("$BOSS_EJECTSLOT"),StringTable.Localize("$BOSS_STRIKERSPRING"),StringTable.Localize("$BOSS_EJSPRING")};
			for(int i=amt;i>0;i-=random(8,16))amts.appendformat(StringTable.Localize("$BOSS_FINLINE"),
				cleanverbs[random(0,cleanverbs.size()-1)],
				contaminants[random(0,random(0,contaminants.size()-1))],
				actionparts[random(0,random((actionparts.size()>>1),actionparts.size()-1))]
			);
			amts=HDMath.BuildVariableString(amts);
			amts.appendformat("\n");

			amt=randompick(-3,-5,-5,-random(8,16));

			A_ChamberGrit(amt,true);
			amt=invoker.weaponstatus[BOSSS_GRIME];
			if(amt>40)amts.appendformat(StringTable.Localize("$BOSS_CLENF1"));
			else if(amt>30)amts.appendformat(StringTable.Localize("$BOSS_CLENF2"));
			else if(amt>20)amts.appendformat(StringTable.Localize("$BOSS_CLENF3"));
			else if(amt>10)amts.appendformat(StringTable.Localize("$BOSS_CLENF4"));
			else amts.appendformat(StringTable.Localize("$BOSS_CLENF5"));
			A_Log(amts,true);
		}
		BOGG E 1 offset(7,52);
		BOGG E 1 offset(8,48);
		BOGG E 1 offset(5,42);
		BOGG E 1 offset(3,38);
		BOGG E 1 offset(2,36);
		goto althold;
	jam:
		BOGG A 0{
			int chm=invoker.weaponstatus[BOSSS_CHAMBER];
			if(chm<1)setweaponstate("chamber");
			else if(chm<3)invoker.weaponstatus[BOSSS_CHAMBER]+=2;
		}
	jamderp:
		BOGG A 0 A_StartSound("weapons/rifleclick",8,CHANF_OVERLAP);
		BOGG D 1 offset(4,38);
		BOGG D 2 offset(2,36);
		BOGG D 2 offset(4,38)A_MuzzleClimb(frandom(-0.5,0.6),frandom(-0.3,0.6));
		BOGG D 3 offset(2,36){
			A_MuzzleClimb(frandom(-0.5,0.6),frandom(-0.3,0.6));
			if(random(0,invoker.jamchance())<12){
				setweaponstate("chamber");
				if(invoker.weaponstatus[BOSSS_CHAMBER]>2)  
					invoker.weaponstatus[BOSSS_CHAMBER]-=2;
			}
		}
		BOGG D 2 offset(4,38);
		BOGG D 3 offset(2,36);
		BOGG A 0 A_Refire("jamderp");
		goto ready;
	chamber:
		BOGG C 4{
			if(
				random(0,max(2,invoker.weaponstatus[BOSSS_GRIME]>>3))
				&&invoker.weaponstatus[BOSSS_CHAMBER]>2
			){
				invoker.weaponstatus[BOSSS_CHAMBER]+=2;
				A_MuzzleClimb(
					-frandom(0.6,2.3),-frandom(0.6,2.3),
					-frandom(0.6,1.3),-frandom(0.6,1.3),
					-frandom(0.6,1.3),-frandom(0.6,1.3)
				);
				setweaponstate("jamderp");
			}else A_StartSound("weapons/boltback",8);
		}
		BOGG D 1 offset(1,34)A_JumpIf(invoker.weaponstatus[0]&BOSSF_CUSTOMCHAMBER,1);
		BOGG D 3 offset(2,36){
			if(gunbraced())A_MuzzleClimb(
				frandom(-0.1,0.3),frandom(-0.1,0.3)
			);else A_MuzzleClimb(
				frandom(-0.2,0.8),frandom(-0.4,0.8)
			);
			int jamch=invoker.jamchance();
			if(hd_debug)A_Log("jam chance: "..jamch);
			if(random(0,100)<jamch)setweaponstate("jam");
		}
		BOGG D 3 offset(1,34){
			//eject
			int chm=invoker.weaponstatus[BOSSS_CHAMBER];
			Class<Actor> rndtp=chm==1?"HDSpent50OMG":"HDLoose50OMG";
			if(chm>=1){
				Vector3 gunofs=HDMath.RotateVec3D((10,-1,0),angle,pitch);
				Actor rrr=spawn(rndtp,(pos.xy,pos.z+height*0.85)+gunofs+viewpos.offset);
				rrr.target=self;
				rrr.angle=angle;
				rrr.vel=HDMath.RotateVec3D((1,-4,2),angle,pitch);
				if(chm==1)rrr.vel*=1.3;
				rrr.vel+=vel;
			}


			//cycle new
			if(invoker.weaponstatus[BOSSS_MAG]>0){  
				invoker.weaponstatus[BOSSS_CHAMBER]=2;
				invoker.weaponstatus[BOSSS_MAG]--;
			}else invoker.weaponstatus[BOSSS_CHAMBER]=0;
		}
		BOGG E 1 A_WeaponReady(WRF_NOFIRE);
		BOGG E 0 A_Refire("althold");
		goto altholdend;

	reload:
		---- A 0{invoker.weaponstatus[0]&=~BOSSF_DONTUSECLIPS;}
		goto reloadstart;
	altreload:
		---- A 0{invoker.weaponstatus[0]|=BOSSF_DONTUSECLIPS;}
		goto reloadstart;
	reloadstart:
		BOGG A 1 offset(0,34);
		BOGG A 1 offset(2,36);
		BOGG A 1 offset(4,40);
		BOGG A 2 offset(8,42){
			A_StartSound("weapons/rifleclick2",8,CHANF_OVERLAP,0.9,pitch:0.95);
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
		}
		BOGG A 4 offset(14,46){
			A_StartSound("weapons/bossloadm",8,CHANF_OVERLAP);
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
		}
		BOGG A 0{
			int mg=invoker.weaponstatus[BOSSS_MAG];
			if(mg==5)setweaponstate("reloaddone");
			else if(invoker.weaponstatus[0]&BOSSF_DONTUSECLIPS)setweaponstate("loadhand");
			else if(
				(
					mg<1
					||!countinv("HD50OMGAmmo")
				)&&!HDMagAmmo.NothingLoaded(self,"HDOMGClip")
			)setweaponstate("loadclip");
		}
	loadhand:
		BOGG A 0 A_JumpIfInventory("HD50OMGAmmo",1,"loadhandloop");
		goto reloaddone;
	loadhandloop:
		BOGG A 4{
			int hnd=min(
				countinv("HD50OMGAmmo"),3,
				5-invoker.weaponstatus[BOSSS_MAG]
			);
			if(hnd<1){
				setweaponstate("reloaddone");
				return;
			}else{
				A_TakeInventory("HD50OMGAmmo",hnd,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[BOSSS_HAND]=hnd;
				A_StartSound("weapons/pocket",9);
			}
		}
	loadone:
		BOGG A 2 offset(16,50) A_JumpIf(invoker.weaponstatus[BOSSS_HAND]<1,"loadhandnext");
		BOGG A 4 offset(14,46){
			invoker.weaponstatus[BOSSS_HAND]--;
			invoker.weaponstatus[BOSSS_MAG]++;

			A_StartSound("weapons/rifleclick2",8);
		}loop;
	loadhandnext:
		BOGG A 8 offset(16,48){
			if(
				PressingReload()||
				PressingFire()||
				PressingAltFire()||
				PressingZoom()||
				!countinv("HD50OMGAmmo")	//don't strip clips automatically
			)setweaponstate("reloaddone");
			else A_StartSound("weapons/pocket",9);
		}goto loadhandloop;
	loadclip:
		BOGG A 0 A_JumpIf(invoker.weaponstatus[BOSSS_MAG]>4,"reloaddone");
		BOGG A 3 offset(16,50){
			let ccc=hdmagammo(findinventory("HDOmgClip"));
			if(ccc){
				//find the last mag that has anything in it and load from that
				bool fullmag=false;
				int magindex=-1;
				for(int i=ccc.mags.size()-1;i>=0;i--){
					if(ccc.mags[i]>=5)fullmag=true;
					if(magindex<0&&ccc.mags[i]>0)magindex=i;
					if(fullmag&&magindex>0)break;
				}
				if(magindex<0){
					setweaponstate("reloaddone");
					return;
				}

				//load the whole clip at once if possible
				if(
					fullmag
					&&invoker.weaponstatus[BOSSS_MAG]<1
				){
					setweaponstate("loadwholeclip");
					return;
				}

				//strip one round and load it
				A_StartSound("weapons/rifleclick2",CHAN_WEAPONBODY);
				invoker.weaponstatus[BOSSS_MAG]++;
				ccc.mags[magindex]--;
			}
		}
		BOGG A 5 offset(16,52) A_JumpIf(
			PressingReload()||
			PressingFire()||
			PressingAltFire()||
			PressingZoom()
		,"reloaddone");
		loop;
	loadwholeclip:
		BOGG A 5 offset(15,48) A_StartSound("weapons/rifleclick2",8);
		BOGG A 4 offset(16,50) A_StartSound("weapons/rifleclick2",8,CHANF_OVERLAP,pitch:1.01);
		BOGG A 3 offset(17,52) A_StartSound("weapons/rifleclick2",8,CHANF_OVERLAP,pitch:1.02);
		BOGG A 2 offset(16,50) A_StartSound("weapons/rifleclick2",8,CHANF_OVERLAP,pitch:1.03);
		BOGG A 1 offset(15,48) A_StartSound("weapons/rifleclick2",8,CHANF_OVERLAP,pitch:1.04);
		BOGG A 2 offset(14,46){
			A_StartSound("weapons/rifleclick",CHAN_WEAPONBODY);
			let ccc=hdmagammo(findinventory("HDOMGClip"));
			if(ccc){
				invoker.weaponstatus[BOSSS_MAG]+=ccc.TakeMag(true);
				if(pressingreload()){
					ccc.addamag(0);
					A_SetTics(10);
					A_StartSound("weapons/pocket",CHAN_POCKETS);
				}else HDMagAmmo.SpawnMag(self,"HDOMGClip",0);
			}
		}goto reloaddone;
	reloaddone:
		BOGG A 1 offset(4,40);
		BOGG A 1 offset(2,36);
		BOGG A 1 offset(0,34);
		goto nope;
	unload:
		BOGG A 1 offset(0,34);
		BOGG A 1 offset(2,36);
		BOGG A 1 offset(4,40);
		BOGG A 2 offset(8,42){
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
			A_StartSound("weapons/rifleclick2",8);
		}
		BOGG A 4 offset (14,46){
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
			A_StartSound("weapons/bossloadm",8);
		}
	unloadloop:
		BOGG A 4 offset(3,41){
			if(invoker.weaponstatus[BOSSS_MAG]<1)setweaponstate("unloaddone");
			else{
				A_StartSound("weapons/rifleclick2",8);
				invoker.weaponstatus[BOSSS_MAG]--;
				if(A_JumpIfInventory("HD50OMGAmmo",0,"null")){
					A_SpawnItemEx(
						"HDLoose50OMG",cos(pitch)*8,0,height-7-sin(pitch)*8,
						cos(pitch)*cos(angle-40)*1+vel.x,
						cos(pitch)*sin(angle-40)*1+vel.y,
						-sin(pitch)*1+vel.z,
						0,SXF_ABSOLUTEMOMENTUM|
						SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
					);
				}else A_GiveInventory("HD50OMGAmmo",1);
			}
		}
		BOGG A 2 offset(2,42);
		BOGG A 0{
			if(
				PressingReload()||
				PressingFire()||
				PressingAltFire()||
				PressingZoom()
			)setweaponstate("unloaddone");
		}loop;
	unloaddone:
		BOGG A 2 offset(2,42);
		BOGG A 3 offset(3,41);
		BOGG A 1 offset(4,40) A_StartSound("weapons/rifleclick",8);
		BOGG A 1 offset(2,36);
		BOGG A 1 offset(0,34);
		goto ready;

	spawn:
		BOGG Z -1;
	}
	override void InitializeWepStats(bool idfa){
		super.InitializeWepStats(idfa);

		weaponspecial = 1337; //UaS sling compatbility

		weaponstatus[BOSSS_MAG]=5;
	}
}

class HDOmgClip:HDMagAmmo{
	default{
		hdmagammo.maxperunit 5;
		hdmagammo.roundtype "HD50OMGAmmo";
		hdmagammo.roundbulk ENC_50OMG;
		hdmagammo.magbulk 0.5;
		hdpickup.refid "g05";
		tag "$TAG_50OMGCLIP";
		inventory.pickupmessage "$PICKUP_50OMGCLIP";
		xscale 0.55; yscale 0.7;
		inventory.maxamount 1000;
	}
	override string,string,name,double getmagsprite(int thismagamt){
		string magsprite;
		if(thismagamt>4)magsprite="OCLPA0";
		else if(thismagamt>3)magsprite="OCLPB0";
		else if(thismagamt>2)magsprite="OCLPC0";
		else if(thismagamt>1)magsprite="OCLPD0";
		else if(thismagamt>0)magsprite="OCLPE0";
		else magsprite="OCLPF0";
		return magsprite,"OGBLA3A7","HD50OMGAmmo",1.7;
	}
	override void GetItemsThatUseThis(){
		itemsthatusethis.push("BogRifle");
	}
	states(actor){
	spawn:
		OCLP ABCDE -1 nodelay{
			int amt=mags[0];
			if(amt>4)frame=0;
			else if(amt>3)frame=1;
			else if(amt>2)frame=2;
			else if(amt>1)frame=3;
			else if(amt>0)frame=4;
		}stop;
	spawnempty:
		OCLP F -1;
		stop;
	}
}

class BogRifleSpawner:IdleDummy{
	states{
	spawn:
		TNT1 A 0 nodelay{
			A_SpawnItemEx("HDOmgClip",randompick(-3,3),randompick(-3,3),0,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("HDOmgClip",randompick(-2,2),randompick(-2,2),0,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("HDOmgClip",randompick(-1,1),randompick(-1,1),0,0,0,0,0,SXF_NOCHECKPOSITION);
			let ggg=BossRifle(spawn("BogRifle",pos,ALLOW_REPLACE));
			if(!ggg)return;
			ggg.special=special;
			ggg.vel=vel;
			for(int i=0;i<5;i++)ggg.args[i]=args[i];
            HDF.TransferSpecials(self,ggg,HDF.TS_ALL);
		}stop;
	}
}